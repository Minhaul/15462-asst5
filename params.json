{"name":"15462 Assignment 5","tagline":"15-462: Assignment 5","body":"# Assignment 5: Iterated Function Systems (IFS)\r\n\r\nMichael Solomon (mds1)\r\n![Iterated Function Systems (IFS)](https://github.com/Bryce-Summers/Bryce-Summers.github.io/blob/master/Images/Barnsley.png?raw=true)\r\n\r\nThe project that I took on is best described by the goals that I set before I started the project:\r\n\r\nFor assignment 5, I plan on implementing iterated function systems (IFS).\r\n - First I plan on implementing a simple rasterization system that will rasterize based on iterated function systems.\r\n - I will then use this and test it by rasterizing a Sierpinski Triangle or Barnsley Fern\r\n - After this, I will create an SVG representation for IFS Fractals to make rendering fractals more easily interchangeable\r\n - I then plan to implement irradiance caching to generate a better looking image of the fractal\r\n - Lastly, I plan on using a distance function to create a nicer looking background for the fractals\r\n\r\nAfter these tasks are complete, I will most likely generate many different fractal images, and possibly create my own fractal.\r\n\r\n# Build Instructions\r\n\r\nYou will find the code in my submittal folder. To get there while on an Andrew Linux machine, run the following command\r\n\r\n    cd /afs/cs/academic/class/15462-f15-users/mds1/asst5\r\n\r\nFrom there, to build the code, run the following command\r\n\r\n    mkdir build && cd build && cmake ../src && make\r\n\r\nThis will build the code and create an executable called drawsvg. To run this, you need to supply the executable with either a .svg file or a directory containing one or more svg files. From the build directory, all of the .svg fractal files I have created exist in\r\n\r\n    ../svg/ifs/\r\n\r\nSo to load the first 9 fractals that I have created into the 9 tabs of the viewer, run the following command from the build directory.\r\n\r\n    ./drawsvg ../svg/ifs/\r\n\r\nFrom there, you can use the number keys 1-9 to switch tabs. Most fractals take less than 10 seconds to rasterize, though depending on the size of the view box and the number of iterations defined for the fractal, it can take up to 15-20 seconds.\r\n\r\nYou can also view individual fractals in the svg/ifs/ directory. For example, to view the leaf2.svg fractal, run the following command from the build directory.\r\n\r\n    ./drawsvg ../svg/ifs/leaf2.svg\r\n\r\n# Results\r\n\r\nAs an aside, these results look much better on a retina display (which I imagine won't be used for grading). Keep in mind that the screenshots I took were on a retina display and will most likely look better than what is generated when you look at the images for grading.\r\n\r\nI was able to complete all of the tasks that I set out to do. The drawsvg executable will display fractals that have irradiance cache interpolation and a distance function background gradient. The SVG parser has been extended to include definitions for an ifs block, so IFS fractals can be defined in .svg files. Below, there are lots of pictures of fractals that I have defined in files and rasterized. Before displaying all of the images, I would like to show a couple of images that are good examples of the functionality of the .svg IFS representation.\r\n\r\nAs a reference, here is the Barnsley fern generated with fill color of black and the fern is the only svg element shown.\r\n\r\n![barnsley](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/barnsley.png?raw=true)\r\n\r\nA cool thing about having an SVG representation for the IFS fractals is that you can put them in a scene with other SVG elements. Here is the Barnsley fern again, with a partially transparent green rectangle over the whole view box area.\r\n\r\n![barnsley_grect](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/barnsley_grect.png?raw=true)\r\n\r\nAnother fun thing is that you can use the transform (just like any other element). In fact, the Barnsley fern is normally straddling the top left corner (0,0), but has been translated to where it is by the transform=\"\" part of the ifs description.\r\n\r\nAs well as transform, you can specify a fill color for the IFS fractal. This makes the fade to black change into a fade to whatever color is specified. Here is the Barnsley fern with a fill color of #800000.\r\n\r\n![barnsley_maroon](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/barnsley_maroon.png?raw=true)\r\n\r\nAs well as these values, you can specify the number of iterations performed for each fractal. More iterations means more points plotted which means more detail (but a longer rasterization time). And of course the fractal itself is specified by a matrix of values that define the affine transformations and the probabilities of each transformation occurring at each iteration. A row in this matrix of {a b c d e f p} corresponds to a transformation of (ax + by + e, cx + dy + f) with probability p.\r\n\r\nThe rest of the IFS fractals that I have generated are just simply in black, and some are transformed to be in a desirable location in the view box if needed.\r\n\r\n![angle](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/angle.png?raw=true)\r\n\r\n![babylon](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/babylon.png?raw=true)\r\n\r\n![c](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/c.png?raw=true)\r\n\r\n![carpet](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/carpet.png?raw=true)\r\n\r\n![curl](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/curl.png?raw=true)\r\n\r\n![curve](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/curve.png?raw=true)\r\n\r\n![crystal](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/cyrstal.png?raw=true)\r\n\r\n![dragon](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/dragon.png?raw=true)\r\n\r\n![leaf](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/leaf.png?raw=true)\r\n\r\n![leaf2](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/leaf2.png?raw=true)\r\n\r\n![pentagon](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/pentagon.png?raw=true)\r\n\r\n![tentacle](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/tentacle.png?raw=true)\r\n\r\n![tree](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/tree.png?raw=true)\r\n\r\n![triangle](https://github.com/Minhaul/15462-asst5/blob/gh-pages/images/triangle.png?raw=true)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}